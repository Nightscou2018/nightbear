#!/usr/bin/env node

/**
 * Use this script to release a specific build of the app to a specific environment (e.g. LIVE, STAGING).
 *
 * NOTE: Requires AWS_SECRET_KEY && AWS_ACCESS_KEY specified through the environment.
 *
 * @example $ s3-release 9cf9f8ad staging FOO=123 BAR=456
 */

/* eslint-disable */

var config = {
  rev: process.argv[2],
  env: process.argv[3],
  domConfig: process.argv.slice(4).map(function(s) {
    return s.split('=').map(encodeURIComponent).join('=');
  }).join('&'),
  s3Key: process.env.AWS_ACCESS_KEY_ID,
  s3Secret: process.env.AWS_SECRET_ACCESS_KEY,
  s3Region: process.env.AWS_DEFAULT_REGION || 'eu-west-1'
};

config.bucketName = 'nightbear.fi';
config.inputUrl = 'https://s3-' + config.s3Region + '.amazonaws.com/' + config.bucketName + '/' + config.rev + '/index.html';
config.outputFile = config.env + '.html';
config.outputUrl = 'https://s3-' + config.s3Region + '.amazonaws.com/' + config.bucketName + '/' + config.outputFile;

console.log(config);

var axios = require('axios'); // @see https://github.com/mzabriskie/axios
var knox = require('knox'); // @see https://github.com/Automattic/knox
var client = knox.createClient({ // @see https://github.com/Automattic/knox#client-creation-options
  key: config.s3Key,
  secret: config.s3Secret,
  region: config.s3Region,
  bucket: config.bucketName
});

axios.get(config.inputUrl)
  .then(function(res) {
    var html = res.data
      .replace(/(href|src)="([a-z].*)"/g, '$1="' + config.rev + '/$2"') // e.g. href="index.css" => href="91d0d595/index.css"
      .replace(/(<body)/, '$1 data-app-rev="' + config.rev + '" data-app-config="' + config.domConfig + '"'); // e.g data-app-config="GA_TRACKING_CODE=UA-30845209-8"
    client.putBuffer(
      new Buffer(html),
      '/' + config.outputFile,
      { 'Content-Type': 'text/html', 'x-amz-acl': 'public-read' },
      function(err, res) {
        if (err) throw err;
        console.log('S3 said:', res.statusCode, res.statusMessage);
        if (res.statusCode !== 200) process.exit(1);
      }
    );
  })
  .catch(function(err) {
    console.log('Something went wrong:', err);
    process.exit(1);
  });
