# To verify variable substitution from environment:
# $ docker-compose config

version: "3"

services:

  # Main service is defined in docker-compose.override.yml
  # See https://docs.docker.com/compose/extends/#multiple-compose-files

  # Support services:

  nginx:
    image: jwilder/nginx-proxy:0.7.0
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      # https://github.com/jwilder/nginx-proxy#how-ssl-support-works
      HTTPS_METHOD: "nohttp" # don't ever allow talking to the services over plain HTTP
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/data/nginx-certs:/etc/nginx/certs:ro"
      - "/data/nginx-data:/etc/nginx/vhost.d"
      - "/data/nginx-data:/usr/share/nginx/html"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.8.1
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/data/nginx-certs:/etc/nginx/certs:rw"
      - "/data/nginx-data:/etc/nginx/vhost.d"
      - "/data/nginx-data:/usr/share/nginx/html"

  logspout:
    image: gliderlabs/logspout:v3.2.4
    restart: always
    command: "${EC2_DOCKER_HOST_SYSLOG_URI}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      # https://github.com/gliderlabs/logspout#environment-variables
      SYSLOG_HOSTNAME: "${EC2_DOCKER_HOST_HOSTNAME}"
